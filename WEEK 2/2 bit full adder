module full_adder(a,b,c,sum,carry);
input a,b,c;
output sum,carry;
assign sum=a^b^c;
assign carry=(a&b)|(b&c)|(a&c);
endmodule


**TEST BENCH CODE**
module full_adder_tb();
reg t_a,t_b,t_c;
wire SUM,CARRY;

full_adder dut(.a(t_a),.b(t_b),.c(t_c),.sum(SUM),.carry(CARRY));

initial begin
t_a=0;t_b=0;t_c=0;
#10
t_a=0;t_b=0;t_c=1;
#10
t_a=0;t_b=1;t_c=0;
#10
t_a=0;t_b=1;t_c=1;
#10
t_a=1;t_b=0;t_c=0;
#10
t_a=1;t_b=0;t_c=1;
#10
t_a=1;t_b=1;t_c=0;
#10
t_a=1;t_b=1;t_c=1;
#10
$stop;
end
endmodule
